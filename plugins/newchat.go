package plugins

import (
	"github.com/Jisin0/Go-Filter-Bot/utils/autodelete"
	"github.com/PaulSonOfLars/gotgbot/v2"
	"github.com/PaulSonOfLars/gotgbot/v2/ext"
)

// MyChatMember handles the MyChatMember event and saves the chat id in db.
func MyChatMember(bot *gotgbot.Bot, ctx *ext.Context) error {
	if ctx.MyChatMember == nil || ctx.MyChatMember.NewChatMember.GetUser().Id != bot.Id {
		// new chat member not present or isnt the bot
		return nil
	}

	if chatType := ctx.MyChatMember.Chat.Type; chatType != gotgbot.ChatTypeSupergroup && chatType != gotgbot.ChatTypeGroup {
		return nil
	}

	DB.SetDefaultSettings(ctx.MyChatMember.Chat.Id)

	text := `<b><i>üëã·¥õ ú·¥Ä…¥·¥ã  è·¥è·¥ú “ì·¥è Ä ·¥Ä·¥Ö·¥Ö…™…¥…¢ ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò.
I ·¥Ñ·¥Ä…¥'·¥õ ·¥°·¥Ä…™·¥õ ·¥õ·¥è s·¥õ·¥Ä Ä·¥õ  ú·¥á ü·¥ò…™…¥…¢  è·¥è·¥ú ·¥è·¥ú·¥õ, ·¥ç·¥Ä·¥ã·¥á s·¥ú Ä·¥á  è·¥è·¥ú'·¥†·¥á ·¥ç·¥Ä·¥Ö·¥á ·¥ç·¥á ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ “ì…™ Äs·¥õ !</i></b>`

	m, err := bot.SendMessage(ctx.MyChatMember.Chat.Id, text, &gotgbot.SendMessageOpts{ParseMode: "HTML"})
	if err == nil {
		autodelete.InsertAutodel(autodelete.AutodelData{ChatID: m.Chat.Id, MessageID: m.MessageId}, 240) // autodel in 2 mins
	}

	return nil
}
